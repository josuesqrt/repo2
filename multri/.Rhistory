X_Datos <- as.matrix(Datos)
n <- dim(X_Datos)[1]
p <- dim(X_Datos)[2]
X <- X_Datos[, 1:(p - 1)]
y <- X_Datos[, p:p]
p <- p - 1
W <- matrix(0, nrow = n, ncol = n)
# Estimación de los coeficientes y la ecuación estimada
Modelo1 <- glm(y ~ X[, -1], family = poisson(link = log))
summary(Modelo1)
# Cálculo de las medidas de bondad de ajuste
l_bmax <- sum(y * log(y) - y - log(factorial(y))); l_bmax
b <- coef(Modelo1)
Xb <- X %*% b
yest <- exp(Xb); yest
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
Ajustado <- fitted(Modelo1); Ajustado
detach(Datos)
# Entrada de datos
# Modo Facil
Datos <- read.table("MLII_PD_Clase_02_Datos01.csv", header = TRUE, sep = ";")
attach(Datos)
X_Datos <- as.matrix(Datos)
n <- dim(X_Datos)[1]
p <- dim(X_Datos)[2]
X <- X_Datos[, 1:(p - 1)]
y <- X_Datos[, p:p]
p <- p - 1
W <- matrix(0, nrow = n, ncol = n)
# Modo memoria
# Valores iniciales
b<-c(1.6, -0.2, -0.1, 0.02)
# Inicio de las iteraciones
m = 5
for (i in 0:m) {
cat("Iteraccion",i,"El valor de b es: ",b,"\n")
Xb<-X%*%b
wii <- exp(Xb)
diag(W) <- wii
z <- Xb + y *exp(-(Xb))-1
b <- solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
b
# Exuaciones Normales
XWX = t(X)%*%W%*%X; XWX
XWz = t(X)%*%W%*%z; XWz
# Intervalos de confianza
NC = 0.95
Cov_B <- solve(t(X)%*%W%*%X); Cov_B
for (i in 1:p) {
LI = b[i] - qnorm(1 - (1-NC)/2) * sqrt(Cov_B[i,i])
LS = b[i] + qnorm(1 - (1-NC)/2) * sqrt(Cov_B[i,i])
cat("IC Coeficiente: b",i-1,"LI:",LI,"LS:",LS,"\n")
}
h <- diag(sqrt(Cov_B))
sumary <- data.frame("Estimate Error" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|" = 2 * (1-pnorm(abs(b/h)))); sumary
# Cálculo de las medidas de bondad de ajuste
l_bmax <- sum(y*log(y) - y - log(factorial(y))); l_bmax
yest <- exp(Xb); yest
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
#l_bmax <- sum(y * log(y) - y - log(factorial(y))); l_bmax
#b <- coef(Modelo1)
#Xb <- X %*% b
#yest <- exp(Xb); yest
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
# Deviance null
D_null <- 2 * sum(y/log(y/mean(y))); D_null
# Deviance null
D_null <- 2 * sum(y*log(y/mean(y))); D_null
# AIC y BIC
AIC = 2*p-2*l_b; AIC
BIC = log(n)*p-2*l_b;BIC
n
p
l_b
BIC = log(n)*p-2*l_b;BIC
# Residuales de Pearson
Ri = (y-yest)/sqrt(yest);Ri
# Estimación de los coeficientes y la ecuación estimada
Modelo1 <- glm(y ~ X[, -1], family = poisson(link = log))
summary(Modelo1)
l_bmax <- sum(y * log(y) - y - log(factorial(y))); l_bmax
b <- coef(Modelo1)
Xb <- X %*% b
yest <- exp(Xb); yest
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
Ajustado <- fitted(Modelo1); Ajustado
# Cálculo de la Deviance
D <- 2 * (l_bmax - l_b); D
D <- 2 * sum(y * log(y / yest)); D# (Usando la fórmula)
# Cálculo de la Desviance Null o Modelo mínimo
D_Null <- 2 * sum(y * log(y / mean(y))); D_Null
glm(y~1,family=poisson(log))
# Cálculo de AIC y BIC
AIC <- 2 * p - 2 * l_b; AIC
BIC <- log(n) * p - 2 * l_b; BIC
# Cálculo de los residuales de Pearson y Deviance
Ri <- (y - yest) / sqrt(yest); Ri
Res_Per <- residuals(Modelo1, type = "pearson"); Res_Per
Di <- y * log(y / yest); Di
Res_Des <- residuals(Modelo1, type = "deviance");Res_Des
X_Datos <- as.matrix(Datos)
n <- dim(X_Datos)[1]
p <- dim(X_Datos)[2]
X <- X_Datos[, 1:(p - 1)]
y <- X_Datos[, p:p]
p <- p - 1
W <- matrix(0, nrow = n, ncol = n)
# Modo memoria
# Valores iniciales
b<-c(1.6, -0.2, -0.1, 0.02)
# Inicio de las iteraciones
m = 5
for (i in 0:m) {
cat("Iteraccion",i,"El valor de b es: ",b,"\n")
Xb<-X%*%b
wii <- exp(Xb)
diag(W) <- wii
z <- Xb + y *exp(-(Xb))-1
b <- solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
b
# Exuaciones Normales
XWX = t(X)%*%W%*%X; XWX
XWz = t(X)%*%W%*%z; XWz
# Intervalos de confianza
NC = 0.95
Cov_B <- solve(t(X)%*%W%*%X); Cov_B
for (i in 1:p) {
LI = b[i] - qnorm(1 - (1-NC)/2) * sqrt(Cov_B[i,i])
LS = b[i] + qnorm(1 - (1-NC)/2) * sqrt(Cov_B[i,i])
cat("IC Coeficiente: b",i-1,"LI:",LI,"LS:",LS,"\n")
}
# ANOVA a mano
h <- diag(sqrt(Cov_B))
sumary <- data.frame("Estimate Error" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|" = 2 * (1-pnorm(abs(b/h)))); sumary
# Cálculo de las medidas de bondad de ajuste
l_bmax <- sum(y*log(y) - y - log(factorial(y))); l_bmax
yest <- exp(Xb); yest
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
# Calculo de la deviance
D = 2*(l_bmax - l_b);D
#D = 2*sum(y*log(y/yest));D
# Deviance null
D_null <- 2 * sum(y*log(y/mean(y))); D_null
# AIC y BIC
AIC = 2*p-2*l_b; AIC
BIC = log(n)*p-2*l_b;BIC
# Residuales de Pearson
Ri = (y-yest)/sqrt(yest);Ri
# Residuales de deviance
Di = y*log(y/yest); Di
# Calculo de Chi- Cuadrado y la deviance
D
# Calculo de Chi- Cuadrado y la deviance
Chi =sum(Di*Ri); Chi
Des = 2*sum(Di); Des
# Calculo de Chi- Cuadrado y la deviance
Chi =sum(Ri*Ri); Chi
Des = 2*sum(Di); Des
# Calculo de los coeficientes de determinacion
desv_residual = 2*sum(y*log(y/yest)); desv_residual
desv_nulo = 2 * sum(y*log(y/mean(y))); desv_nulo
R2 = 1 - desv_residual/desv_nulo; R2
R2 = (1 - desv_residual/desv_nulo)*100%; R2
R2 = (1 - desv_residual/desv_nulo)*100; R2
# Problema 2
# BINOMIAL
# Entrada de datos
y <- c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
# Problema 2
# BINOMIAL
# Entrada de datos
y <- c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
n <- c(28,25,24,28,32,34,38,42,28,25,24,28,32,34,38,42)
yy <- cbind(y,n-y)
X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30)
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0)
X3 = X1*X2
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
# valores iniciales
b<-c(-1.3, 1.7, 0.004)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0)n
nn <- dim(X)[1]; pp <- dim(X)[2]
# Problema 2
# BINOMIAL
# Entrada de datos
y <- c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
n <- c(28,25,24,28,32,34,38,42,28,25,24,28,32,34,38,42)
yy <- cbind(y,n-y)
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0)n
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
X <- cbind(X0 = c(rep(1,16)),
X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
# valores iniciales
b<-c(-1.3, 1.7, 0.004)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
dim(X)
b
# valores iniciales
b<-c(-1.3, 1.7, 0.004, 500)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
# valores iniciales
b<-c(-1.3, 1.7, 0.004, 5)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
# valores iniciales
b<-c(-1.3, 0.004, 1.17, 5)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
# valores iniciales
b<-c(-1.3, 0.004, 1.17, 2)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
Pi
Xb
X
n
# Problema 2
# BINOMIAL
# Entrada de datos
y <- c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
n <- c(28,25,24,28,32,34,38,42,28,25,24,28,32,34,38,42)
yy <- cbind(y,n-y)
X <- cbind(X0 = c(rep(1,16)),
X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
# Problema 2
# BINOMIAL
# Entrada de datos
y <- c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
n <- c(28,25,24,28,32,34,38,42,28,25,24,28,32,34,38,42)
yy <- cbind(y,n-y)
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
# Problema 2
# BINOMIAL
# Entrada de datos
y <- c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
n <- c(28,25,24,28,32,34,38,42,28,25,24,28,32,34,38,42)
yy <- cbind(y,n-y)
X <- cbind(X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
X <- cbind(X0 = c(rep(1,16)),
X1 = c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
X <- cbind(X1 <- c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 = c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 = X1*X2)
X <- cbind(X1 <- c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 <- c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 <- X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
# valores iniciales
b<-c(-1.3, 1.17, 0.04)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
# valores iniciales
b<-c(-1.3, 1.17, 0.04)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
# valores iniciales
b<-c(-1.3, 0.04, 1.17)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
X <- cbind(X0 <- c(rep(1,16)),
X1 <- c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30),
X2 <- c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X3 <- X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
n
nn
pp
#nn <- dim(X)[1]; pp <- dim(X)[2]
nn <- 16; pp <- 2
W <- matrix(0, nrow = nn, ncol = nn)
# valores iniciales
b<-c(-1.3, 0.004)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
X <- cbind(X0 <- c(rep(1,16)),
X1 <- c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30))#,
#X2 <- c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
#X3 <- X1*X2)
#nn <- dim(X)[1]; pp <- dim(X)[2]
nn <- 16; pp <- 2
W <- matrix(0, nrow = nn, ncol = nn)
# valores iniciales
b<-c(-1.3, 0.004)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
X <- cbind(X0 <- c(rep(1,16)),
X1 <- c(2,4,8,12,16,20,24,30,2,4,8,12,16,20,24,30))#,
#X2 <- c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
#X3 <- X1*X2)
nn <- dim(X)[1]; pp <- dim(X)[2]
W <- matrix(0, nrow = nn, ncol = nn)
# valores iniciales
b<-c(-1.3, 0.004)
m=5
for (i in 0:m) {
cat("Iteraccion b:",i,"Coeficiente estimado b:",b,"\n")
Xb <- X%*%b
Pi <- exp(Xb)/(1+exp(Xb))
wii <- n*Pi*(1-Pi)
diag(W) <- wii
z <- Xb + (y-n*Pi)/(n*Pi*(1-Pi))
b <- solve(t(X)%*%W%*%X)%*%t(X)%*%W%*%z
}
b
# Ecuaciones Normales
XWX = t(X)%*%W%*%X; XWX
XWz = t(X)%*%W%*%z; XWz
# IC de cofianza de los coeficientes
Cov_B = solve(t(X)%*%W%*%X); Cov_B
NC = 0.95
for (i in 1:pp) {
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente : b",i-1," LI = ",LI, " LS = ",LS,"\n")
}
n-p
nn-pp
yest <- exp(Xb)/(1+exp(Xb)); yest
l_bmax <- sum(y * log(y) - y - log(factorial(y))); l_bmax
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
# Cálculo de la Deviance
D <- 2 * (l_bmax - l_b); D
D <- 2 * sum(y * log(y / yest)); D# (Usando la fórmula)
D=2*sum(y*log(y/Yest)+(n-y)*log((n-y)/(n-Yest))); D
D=2*sum(y*log(y/yest)+(n-y)*log((n-y)/(n-yest))); D
l_bmax <- sum(y * log(y) - y - log(factorial(y))); l_bmax
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
b
X
# Calculo de la Deviance
LP <- as.matrix(X)%*%b[-1]+b[1]
b[-1]
X
Pi
# Calculo de la Deviance
yest <- n*Pi; yest
l_bmax <- sum(y * log(y) - y - log(factorial(y))); l_bmax
l_b <- sum(y * log(yest) - yest - log(factorial(y))); l_b
D=2*sum(y*log(y/yest)+(n-y)*log((n-y)/(n-yest))); D
n-p
nn-pp
Chi_Tab = qchisq(1-alfa, nn-pp); Chi_Tab
alfa = 0.05
Chi_Tab = qchisq(1-alfa, nn-pp); Chi_Tab
p_valor = 1 - pchisq(D, nn-pp); p_valor
# Sumary a mano
h <- diag(sqrt(Cov_B))
sumary <- data.frame("Estimate Error" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|" = 2 * (1-pnorm(abs(b/h)))); sumary
# Calculo de los coeficientes de determinacion
R2 = (1 - desv_residual/desv_nulo)*100; R2
# Calculo de los coeficientes de determinacion
desv_residual = 2*sum(y*log(y/yest)); desv_residual
desv_nulo = 2 * sum(y*log(y/mean(y))); desv_nulo
R2 = (1 - desv_residual/desv_nulo)*100; R2
# Calculo de los coeficientes de determinacion
desv_nulo = 2 * sum(y*log(y/mean(y))); desv_nulo
# Calculo de los coeficientes de determinacion
desv_nulo = 2 * sum(y*log(y/mean(y))); desv_nulo
R2 = (1 - D/desv_nulo)*100; R2
