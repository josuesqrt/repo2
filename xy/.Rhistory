sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = sumary[,1]/sumary[,2],
"Pr(>|z|)" = b); sumary
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)]))); sumary
sqrt(Cov_B[i,i])
sqrt(Cov_B[c(1,2),c(1,2)])
diag(sqrt(Cov_B[c(1,2),c(1,2)]))
diag(sqrt(Cov_B[c(1,2),c(1,2)]))
h <- c(1,2)
h
diag(sqrt(Cov_B[h,h]))
y=c(1,3,7,15,9,17,5,13)
X=cbind(X0=c(1,1,1,1,1,1,1,1), X1=c(2,4,6,9,7,12,2,10))
n=dim(X)[1]; p=dim(X)[2]
W=matrix(0,nrow=n,ncol=n)
# Valores iniciales
b=c(0.8, 0.1)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados: ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=b[1]+b[2]*X[,2]
wii=exp(Xb); diag(W)=wii
z=Xb+y/exp(Xb)-1
b=solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# Estimacion MV con el algoritmo Scoring
# D)
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Vector de coeficientes estimados
b
# E)
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
NC=0.95
for(i in 1:p) {
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente : b",i-1," LI = ",LI, " LS = ",LS,"\n")
}
# F)
# Estimación puntual
Modelo1<-glm(y~X,family=poisson(link=log))
summary(Modelo1)
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = sumary[,1]/sumary[,2],
"Pr(>|z|)" = b); sumary
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = sumary[,1]/sumary[,2],
"Pr(>|z|)" = b); sumary
# C)
# Entrada de datos
y=c(1,3,7,15,9,17,5,13)
X=cbind(X0=c(1,1,1,1,1,1,1,1), X1=c(2,4,6,9,7,12,2,10))
n=dim(X)[1]; p=dim(X)[2]
W=matrix(0,nrow=n,ncol=n)
# Valores iniciales
b=c(0.8, 0.1)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados: ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=b[1]+b[2]*X[,2]
wii=exp(Xb); diag(W)=wii
z=Xb+y/exp(Xb)-1
b=solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# D)
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Vector de coeficientes estimados
b
# E)
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
NC=0.95
for(i in 1:p) {
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente : b",i-1," LI = ",LI, " LS = ",LS,"\n")
}
# F)
# Estimación puntual
Modelo1<-glm(y~X,family=poisson(link=log))
summary(Modelo1)
# Estimación por Intervalo de confianza
NC=0.95
confint.default(Modelo1, level=NC)
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = sumary[,1]/sumary[,2],
"Pr(>|z|)" = b); sumary
sumary <- data.frame(Estimate = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = sumary[,1]/sumary[,2],
"Pr(>|z|)" = b); sumary
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = b/diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"Pr(>|z|)" = b); sumary
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = b/diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/diag(sqrt(Cov_B[c(1,2),c(1,2)])))))); sumary
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = b/diag(sqrt(Cov_B[c(1,2),c(1,2)])),
'Pr(>|z|)' = 2 * (1 - pnorm(abs(b/diag(sqrt(Cov_B[c(1,2),c(1,2)])))))); sumary
# pregunta C
# Entrada de datos
Datos=read.table("MLII_PD_Clase_02_Datos01.csv",header=T,sep=";")
attach(Datos)
datos
Datos
X_Datos=as.matrix(Datos)
n=dim(X_Datos)[1]; p=dim(X_Datos)[2]
X=X_Datos[,1:p-1]
y=X_Datos[,p:p]
p=p-1
W<-matrix(0,nrow=n,ncol=n)
# Valores iniciales
b<-c(1.6, -0.2, -0.1, 0.02)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados:   ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=X%*%b
wii<-exp(Xb)
diag(W)<-wii
z<-Xb+y*exp(-(Xb))-1
b<-solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# pregunta D
# Vector de coeficientes estimados
b
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Pregunta E
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
sqrt(Cov_B)
# C)
# Entrada de datos
y=c(1,3,7,15,9,17,5,13)
X=cbind(X0=c(1,1,1,1,1,1,1,1), X1=c(2,4,6,9,7,12,2,10))
n=dim(X)[1]; p=dim(X)[2]
W=matrix(0,nrow=n,ncol=n)
# Valores iniciales
b=c(0.8, 0.1)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados: ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=b[1]+b[2]*X[,2]
wii=exp(Xb); diag(W)=wii
z=Xb+y/exp(Xb)-1
b=solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# D)
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Vector de coeficientes estimados
b
# E)
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
NC=0.95
for(i in 1:p) {
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente : b",i-1," LI = ",LI, " LS = ",LS,"\n")
}
# F)
# Estimación puntual
Modelo1<-glm(y~X,family=poisson(link=log))
summary(Modelo1)
# Estimación por Intervalo de confianza
NC=0.95
confint.default(Modelo1, level=NC)
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"z value" = b/diag(sqrt(Cov_B[c(1,2),c(1,2)])),
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/diag(sqrt(Cov_B[c(1,2),c(1,2)])))))); sumary
sqrt(Cov_B)
Cov_B
diag(sqrt(Cov_B))
sumary <- data.frame("Estimate" = b,
"Std. Error" = diag(sqrt(Cov_B)),
"z value" = b/diag(sqrt(Cov_B)),
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/diag(sqrt(Cov_B)))))); sumary
# Hacer el summary a mano
## Z value = Estimate/Std.error
## Pr(>|z|) : hallar desde el Z value
h <- diag(sqrt(Cov_B))
sumary <- data.frame("Estimate" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/h)))); sumary
detach(X)
detach(Datos)
# pregunta C
# Entrada de datos
Datos=read.table("MLII_PD_Clase_02_Datos01.csv",header=T,sep=";")
attach(Datos)
X_Datos=as.matrix(Datos)
n=dim(X_Datos)[1]; p=dim(X_Datos)[2]
X=X_Datos[,1:p-1]
y=X_Datos[,p:p]
p=p-1
W<-matrix(0,nrow=n,ncol=n)
# Valores iniciales
b<-c(1.6, -0.2, -0.1, 0.02)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados:   ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=X%*%b
wii<-exp(Xb)
diag(W)<-wii
z<-Xb+y*exp(-(Xb))-1
b<-solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# pregunta D
# Vector de coeficientes estimados
b
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Pregunta E
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
# Verificando con la librería glm
Modelo1<-glm(y~X[,-1],family=poisson(link=log))
summary(Modelo1)
# Intervalo de confianza
NC=0.95
confint.default(Modelo1, level=NC)
# Problema 2
# Pregunta C
# Entrada de datos
y<-c(10,12,14,18,20,22,26,28,10,9,8,5,6,5,4,3)
n<-c(28,25,24,28,32,34,38,42,28,25,24,28,32,34,38,42)
yy<-cbind(y,n-y)
X<-cbind(X0=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
X1=c(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0),
X2=c(2,4,8,12,16,20,24,30,2,4,8,12,16,20 ,24,30))
nn=dim(X)[1]; p=dim(X)[2]
W<-matrix(0,nrow=nn,ncol=nn)
# Valores iniciales
b<-c(-1.3, 1.7, 0.004)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados:   ",b,"\n")
#  Estimacion MV con el algoritmo Scoring
Xb=X%*%b
Pi=exp(Xb)/(1+exp(Xb))
wii<-n*Pi*(1-Pi)
diag(W)<-wii
z<-Xb+(y-n*Pi)/(n*Pi*(1-Pi))
b<-solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# Pregunta D
# Vector de coeficientes estimados
b
#  Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
# Pregunta E
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
# Verificando con la librería glm
Modelo1<- glm(yy~ X[,-1],family=binomial(link=logit))
summary(Modelo1)
# Intervalo de confianza
NC=0.95
confint.default(Modelo1, level=NC)
# Problema 3
# Pregunta B
# Entrada de datos
y<-c(1016, 1076, 1291, 1253, 1379, 872, 1247, 1230, 802, 1002)
X<-cbind(X0=c(1,1,1,1,1,1,1,1,1,1),
X1=c(106,72,76, 81,101,93,86,44,107,75),
X2=c(478,355,239,257,431,279,378,265,231,307),
X3=c(199,153,167,189,157,188,162,200,188,161))
n=dim(X)[1]; p=dim(X)[2]
W<-matrix(0,nrow=n,ncol=n)
# Valores iniciales
b<-c(1750.0, -4.9, 0.7, -2.6)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados:   ",b,"\n")
# Estimacion MV con el algoritmo Scoring
z<-y
b<-solve(t(X)%*%X)%*%(t(X)%*%z)
}
# Pregunta C
# Vector de coeficientes estimados
b
# Pregunta D
# Ecuaciones normales
XWX=t(X)%*%X; XWX
XWz=t(X)%*%z; XWz
# Pregunta E
# Intervalos de confianza de los coeficientes
Var=(1/(n-p))*(t(y-X%*%b)%*%(y-X%*%b))
Cov_B=Var[1,1]*solve(t(X)%*%X); Cov_B
NC=0.95
for(i in 1:p)
{
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente :  b",i-1," LI = ",LI, "   LS = ",LS,"\n")
}
# Verificando con la librería glm
Modelo1<-glm(y~X[,-1],family=gaussian(link=identity))
summary(Modelo1)
# Intervalo de confianza
NC=0.95
confint.default(Modelo1, level=NC)
# C)
# Entrada de datos
y=c(1,3,7,15,9,17,5,13)
X=cbind(X0=c(1,1,1,1,1,1,1,1), X1=c(2,4,6,9,7,12,2,10))
n=dim(X)[1]; p=dim(X)[2]
W=matrix(0,nrow=n,ncol=n)
# Valores iniciales
b=c(0.8, 0.1)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados: ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=b[1]+b[2]*X[,2]
wii=exp(Xb); diag(W)=wii
z=Xb+y/exp(Xb)-1
b=solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# D)
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Vector de coeficientes estimados
b
# E)
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
NC=0.95
for(i in 1:p) {
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente : b",i-1," LI = ",LI, " LS = ",LS,"\n")
}
# F)
# Estimación puntual
Modelo1<-glm(y~X,family=poisson(link=log))
summary(Modelo1)
# Estimación por Intervalo de confianza
NC=0.95
confint.default(Modelo1, level=NC)
# Hacer el summary a mano
## Z value = Estimate/Std.error
## Pr(>|z|) : hallar desde el Z value
h <- diag(sqrt(Cov_B))
sumary <- data.frame("Estimate" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/h)))); sumary
summary(Modelo1)
sumary <- data.frame("Estimate" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/h)))); sumary
#Ejercicio propuesto
y <- c(20,16,15,17,24,27,21,16,22,20) #Numero de encuestas
x1 <- c(10,8,6.5,8,12,12,10,7,9,8) #Tiempo(minutos)
x<- x1/60
#Ejercicio propuesto
y <- c(20,16,15,17,24,27,21,16,22,20) #Numero de encuestas
x1 <- c(10,8,6.5,8,12,12,10,7,9,8) #Tiempo(minutos)
x<- x1/60
x<- c(X0=c(1,1,1,1,1,1,1,1,1,1,),X1=x1/60)
x<- c(X0=c(1,1,1,1,1,1,1,1,1,1),X1=x1/60)
x
x<- cbind(X0=c(1,1,1,1,1,1,1,1,1,1),X1=x1/60)
x
n <- dim(x)[1], p<-dim(x[2])
n <- dim(x)[1]; p<-dim(x[2])
n <- dim(x)[1]; p<-dim(x)[2]
?matrix
W <- matrix(0,nrow = n, ncol = n)
# Pregunta B
# valores iniciales
b <- c(0.6,0.2)
m <- 5
# Pregunta B
# valores iniciales
b <- c(0.6,0.2)
m <- 5
for (i in 0:m) {
cat("Iteracción",i,"el valor de b es:",b,"\n")
Xb = b[1] + b[2]*x[,2],
m <- 5
for (i in 0:m) {
cat("Iteracción",i,"el valor de b es:",b,"\n")
Xb = b[1] + b[2]*x[,2]
wii = exp(Xb);diag(W) = wii
z = Xb + y/exp(Xb) -1
b = solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
m <- 5
for (i in 0:m) {
cat("Iteracción",i,"el valor de b es:",b,"\n")
Xb = b[1] + b[2]*x[,2]
wii = exp(Xb);diag(W) = wii
z = Xb + y/exp(Xb) -1
b = solve(t(x)%*%W%*%x)%*%(t(x)%*%W%*%z)
}
# Pregunta C
#Ecuaciones normales
XWX = t(x)%*%W%*%x; XWX
XWz = t(x)%*%W%*%z; XWz
# Coeficiente estimado final
b
# Intervalos de confianza al 95%
Cov_B = solve(t(x)%*%W%*%x); Cov_B
NC = 0.95
# Intervalos de confianza al 95%
Cov_B = solve(t(x)%*%W%*%x); Cov_B
NC = 0.95
for (i in 0:p) {
LI = b[i] - qnorm(1 - ((1-NC)/2))*sqrt(Cov_B[i,i])
LS = b[i] + qnorm(1 - ((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC coeficiente: b",i-1,"LI = ",LI,"LS =",LS, "\n")
}
# Intervalos de confianza al 95%
Cov_B = solve(t(x)%*%W%*%x); Cov_B
NC = 0.95
for (i in 1:p) {
LI = b[i] - qnorm(1 - ((1-NC)/2))*sqrt(Cov_B[i,i])
LS = b[i] + qnorm(1 - ((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC coeficiente: b",i-1,"LI = ",LI,"LS =",LS, "\n")
}
x
y=c(1,3,7,15,9,17,5,13)
X=cbind(X0=c(1,1,1,1,1,1,1,1), X1=c(2,4,6,9,7,12,2,10))
n=dim(X)[1]; p=dim(X)[2]
W=matrix(0,nrow=n,ncol=n)
# Valores iniciales
b=c(0.8, 0.1)
# Inicio de las iteraciones
m=5
for(i in 0:m)
{
cat("Iteracion = ",i," Coeficientes estimados: ",b,"\n")
# Estimacion MV con el algoritmo Scoring
Xb=b[1]+b[2]*X[,2]
wii=exp(Xb); diag(W)=wii
z=Xb+y/exp(Xb)-1
b=solve(t(X)%*%W%*%X)%*%(t(X)%*%W%*%z)
}
# Estimacion MV con el algoritmo Scoring
# D)
# Ecuaciones normales
XWX=t(X)%*%W%*%X; XWX
XWz=t(X)%*%W%*%z; XWz
# Vector de coeficientes estimados
b
# E)
# Intervalos de confianza de los coeficientes
Cov_B=solve(t(X)%*%W%*%X); Cov_B
NC=0.95
for(i in 1:p) {
LI=b[i] - qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
LS=b[i] + qnorm(1-((1-NC)/2))*sqrt(Cov_B[i,i])
cat("IC Coeficiente : b",i-1," LI = ",LI, " LS = ",LS,"\n")
}
# F)
# Estimación puntual
Modelo1<-glm(y~X,family=poisson(link=log))
summary(Modelo1)
# Hacer el summary a mano
## Z value = Estimate/Std.error
## Pr(>|z|) : hallar desde el Z value
h <- diag(sqrt(Cov_B))
sumary <- data.frame("Estimate" = b,
"Std. Error" = h,
"z value" = b/h,
"Pr(>|z|)" = 2 * (1 - pnorm(abs(b/h)))); sumary
summary(Modelo1)
